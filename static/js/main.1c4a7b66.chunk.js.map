{"version":3,"sources":["helper/fetchWeatherData.js","context/tempContext.js","components/card.js","components/form.js","context/coordinateContext.js","App.js","reportWebVitals.js","theme/theme.js","index.js"],"names":["endpoint","access_key","fetchData","url","a","axios","get","response","data","fetchWeatherDataByCity","city","console","log","loading","temp","Math","round","main","name","country","sys","icon","weather","feels_like","humidity","fetchWeatherDataByCoordinates","lat","long","TempContext","createContext","TempProvider","props","useState","tempData","setTempData","Provider","value","children","useStyles","makeStyles","theme","root","background","palette","secondary","accent","color","primary","textColor","display","height","width","margin","borderRadius","title","TempCard","useContext","classes","Card","className","CardContent","Box","justifyContent","alignItems","CircularProgress","Typography","variant","src","padding","search","marginBottom","TempForm","setCity","handleSubmit","event","preventDefault","onSubmit","FormControl","TextField","placeholder","onChange","e","target","fullWidth","Button","type","CoordinateContext","CoordinateProvider","latitude","longitude","coordinates","setCoordinates","App","options","enableHighAccuracy","success","pos","crd","coords","accuracy","error","err","warn","code","message","useEffect","obj","navigator","geolocation","getCurrentPosition","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","darkPrimary","lightPrimary","primaryText","secondaryText","dividerColor","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c4a7b66.chunk.js","sourcesContent":["// api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n// api.openweathermap.org/data/2.5/weather?q={city name},{state code}&appid={API key}\n// api.openweathermap.org/data/2.5/weather?q={city name},{state code},{country code}&appid={API key}\n// api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n// api.openweathermap.org/data/2.5/weather?zip={zip code},{country code}&appid={API key}\n\nimport axios from \"axios\";\nlet endpoint = \"https://api.openweathermap.org/data/2.5/weather?\";\nlet access_key = \"&appid=ffab998f7678dc6ab184b50e7a1d5d18\";\n\nconst fetchData = async (url) => {\n  try {\n    const response = await axios.get(url);\n\n    const data = response.data;\n    // console.log(data);\n    return data;\n  } catch (err) {\n    // console.error(err.message);\n    return null;\n  }\n};\n\nexport async function fetchWeatherDataByCity(city) {\n  let url = endpoint + \"q=\" + city + access_key + \"&units=metric\";\n  console.log(url);\n\n  const data = await fetchData(url);\n  if (data === null) {\n    return {\n      loading: true,\n    };\n  }\n  return {\n    temp: Math.round(data.main.temp),\n    city: data.name,\n    country: data.sys.country,\n    icon: data.weather[0].icon,\n    weather: data.weather[0].main,\n    feels_like: Math.round(data.main.feels_like),\n    humidity: data.main.humidity,\n  };\n}\n\n//https://api.openweathermap.org/data/2.5/weather?lat=24.6051003&lon=73.7079388&appid=ffab998f7678dc6ab184b50e7a1d5d18\nexport async function fetchWeatherDataByCoordinates(lat, long) {\n  //let url = endpoint + \"lat=\" + lat + \"&lon=\" + long + \"&appid=\" + access_key;\n  let url =\n    endpoint + \"lat=\" + lat + \"&lon=\" + long + access_key + \"&units=metric\";\n  console.log(url);\n\n  const data = await fetchData(url);\n\n  return {\n    temp: Math.round(data.main.temp),\n    city: data.name,\n    country: data.sys.country,\n    icon: data.weather[0].icon,\n    weather: data.weather[0].main,\n    feels_like: Math.round(data.main.feels_like),\n    humidity: data.main.humidity,\n  };\n}\n\nfunction fetchWeatherDataByZipCountry(zip, countryCode) {}\n","import { createContext, useState } from \"react\";\nimport { fetchWeatherDataByCoordinates } from \"../helper/fetchWeatherData\";\nimport { getLocation } from \"../helper/geoLocation\";\n\nexport const TempContext = createContext();\n\nexport const TempProvider = (props) => {\n  const [tempData, setTempData] = useState({\n    loading: true,\n    temp: null,\n    city: null,\n    country: null,\n  });\n\n  return (\n    <TempContext.Provider value={{ tempData, setTempData }}>\n      {props.children}\n    </TempContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { TempContext } from \"../context/tempContext\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: `linear-gradient(45deg, ${theme.palette.secondary.main} 30%, ${theme.palette.secondary.accent} 70%)`,\n    color: theme.palette.primary.textColor,\n    display: \"flex\",\n    height: \"400px\",\n    width: \"250px\",\n    margin: \"100px auto\",\n    borderRadius: \"5%\",\n  },\n  title: {\n    color: theme.palette.primary.textColor,\n  },\n}));\n\nexport function TempCard() {\n  const { tempData, setTempData } = useContext(TempContext);\n  const classes = useStyles();\n\n  if (tempData.loading === true) {\n    return (\n      <Card className={classes.root}>\n        <CardContent>\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            height=\"100%\"\n          >\n            <CircularProgress />\n            <Typography variant=\"h5\">Enter a valid City</Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <img\n          src={`https://openweathermap.org/img/wn/${tempData.icon}@2x.png`}\n        />\n        <Typography className={classes.title} variant=\"h2\">\n          {tempData.temp}&#8451;\n        </Typography>\n        <Typography variant=\"h7\">{tempData.weather}</Typography>\n        <Typography variant=\"h5\">\n          {tempData.city}, {tempData.country}\n        </Typography>\n        <Typography variant=\"h7\">\n          Feels like {tempData.feels_like}&#8451;\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { fetchWeatherDataByCity } from \"../helper/fetchWeatherData\";\nimport { TempContext } from \"../context/tempContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"yellow\",\n    //   color: \"green\",\n    width: \"200px\",\n    margin: \"auto\",\n    padding: \"10px 0\",\n    display: \"flex\",\n  },\n  search: {\n    // margin: \"10px 0\",\n    // padding: \"0 2px\",\n    margin: \"auto\",\n    marginBottom: 10,\n    display: \"flex\",\n  },\n}));\n\nexport function TempForm() {\n  const { tempData, setTempData } = useContext(TempContext);\n  const [city, setCity] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(city);\n    let data = await fetchWeatherDataByCity(city);\n    console.log(data);\n    setTempData(data);\n    setCity(\"\");\n  };\n  const classes = useStyles();\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <FormControl>\n        <TextField\n          color=\"primary\"\n          variant=\"outlined\"\n          placeholder=\"Search a city\"\n          value={city}\n          onChange={(e) => {\n            setCity(e.target.value);\n            console.log(e.target.value);\n          }}\n          fullWidth\n          className={classes.search}\n        />\n        <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n          Go Temp\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n","import { useState, createContext } from \"react\";\n\nexport const CoordinateContext = createContext();\n\nexport const CoordinateProvider = (props) => {\n  const [coordinates, setCoordinates] = useState({\n    latitude: null,\n    longitude: null,\n  });\n\n  return (\n    <CoordinateContext.Provider value={{ coordinates, setCoordinates }}>\n      {props.children}\n    </CoordinateContext.Provider>\n  );\n};\n","import { TempCard } from \"./components/card.js\";\nimport { TempForm } from \"./components/form.js\";\nimport { useEffect, useContext } from \"react\";\nimport { fetchWeatherDataByCoordinates } from \"./helper/fetchWeatherData.js\";\nimport { TempContext } from \"./context/tempContext.js\";\nimport { CoordinateContext } from \"./context/coordinateContext.js\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\n/*\nCreating the state in the parent component and passing \nit down the build tree\n*/\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.accent} 30%, ${theme.palette.primary.main} 90%)`,\n    height: \"100vh\",\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles(props);\n  const { tempData, setTempData } = useContext(TempContext);\n\n  const { coordinates, setCoordinates } = useContext(CoordinateContext);\n  // const { latitude, longitude } = getLocation();\n  // console.log(latitude, longitude);\n\n  var options = {\n    enableHighAccuracy: true,\n  };\n\n  async function success(pos) {\n    var crd = pos.coords;\n\n    console.log(\"Your current position is:\");\n    console.log(`Latitude : ${crd.latitude}`);\n    console.log(`Longitude: ${crd.longitude}`);\n    console.log(`More or less ${crd.accuracy} meters.`);\n\n    setCoordinates({ latitude: crd.latitude, longitude: crd.longitude });\n\n    setTempData(\n      await fetchWeatherDataByCoordinates(crd.latitude, crd.longitude)\n    );\n  }\n\n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  }\n\n  const getGeoLocation = () => {\n    navigator.geolocation.getCurrentPosition(success, error, options);\n  };\n\n  // re renders on the change, we can add objects when they're changed\n  // then the useEffect() will re-run again\n  useEffect(() => {\n    const obj = getGeoLocation();\n    console.log(obj);\n  }, []);\n\n  if (coordinates) {\n    console.log(coordinates);\n  }\n  console.log(\"This is props \" + props.theme);\n  return (\n    <Box className={classes.root}>\n      <TempForm />\n      <TempCard />\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, makeStyles } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#673AB7\",\n      accent: \"#03A9F4\",\n      darkPrimary: \"#512DA8\",\n      lightPrimary: \"#D1C4E9\",\n      textColor: \"#FFFFFF\",\n      primaryText: \"#212121\",\n      secondaryText: \"#757575\",\n      dividerColor: \"#BDBDBD\",\n    },\n    secondary: {\n      main: \"#FF5722\",\n      accent: \"#FFC107\",\n      darkPrimary: \"#E64A19\",\n      lightPrimary: \"#FFCCBC\",\n      textColor: \"#FFFFFF\",\n      primaryText: \"#212121\",\n      secondaryText: \"#757575\",\n      dividerColor: \"#BDBDBD\",\n    },\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { TempProvider } from \"./context/tempContext.js\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./theme/theme.js\";\nimport { CoordinateProvider } from \"./context/coordinateContext\";\n\nReactDOM.render(\n  // theme={theme}\n  <ThemeProvider theme={theme}>\n    <TempProvider>\n      <CoordinateProvider>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </CoordinateProvider>\n    </TempProvider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}